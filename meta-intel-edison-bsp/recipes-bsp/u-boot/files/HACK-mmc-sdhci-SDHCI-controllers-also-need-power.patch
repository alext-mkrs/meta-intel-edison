From 7f8145203d9a48c1771be03986888e7894680c21 Mon Sep 17 00:00:00 2001
From: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date: Wed, 15 Mar 2017 20:20:43 +0200
Subject: [PATCH 2/2] HACK: mmc: sdhci: SDHCI controllers also need power

On some systems SDHCI controllers may be powered off and it's required
to bring them on before accessing.

SDHCI generic driver currently lacks any mean of doing it. Call the same
board_power_mmc_init() at sdhci_init() stage.

Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 arch/x86/dts/edison.dts     | 5 -----
 board/intel/edison/edison.c | 9 +++++++++
 drivers/mmc/sdhci.c         | 2 ++
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/arch/x86/dts/edison.dts b/arch/x86/dts/edison.dts
index 0b04984..81dae97 100644
--- a/arch/x86/dts/edison.dts
+++ b/arch/x86/dts/edison.dts
@@ -67,15 +67,10 @@
 		reg = <0xff3fc000 0x1000>;
 	};
 
-/*
- * FIXME: For now U-Boot DM model doesn't allow to power up this controller.
- * Enabling it will make U-Boot hang.
- *
 	sdcard: mmc@ff3fa000 {
 		compatible = "intel,sdhci-tangier";
 		reg = <0xff3fa000 0x1000>;
 	};
- */
 
 	pmu: power@ff00b000 {
 		compatible = "intel,pmu-mid";
diff --git a/board/intel/edison/edison.c b/board/intel/edison/edison.c
index e3334f8..4e1d30b 100644
--- a/board/intel/edison/edison.c
+++ b/board/intel/edison/edison.c
@@ -14,9 +14,18 @@
 #include <linux/usb/gadget.h>
 
 #include <asm/cache.h>
+#include <asm/pmu.h>
 #include <asm/scu.h>
 #include <asm/u-boot-x86.h>
 
+/* List of Intel Tangier LSSs */
+#define PMU_LSS_TANGIER_SDIO0_01	1
+
+void board_mmc_power_init(void)
+{
+	pmu_turn_power(PMU_LSS_TANGIER_SDIO0_01, true);
+}
+
 static struct dwc3_device dwc3_device_data = {
 	.maximum_speed = USB_SPEED_HIGH,
 	.base = CONFIG_SYS_USB_OTG_BASE,
diff --git a/drivers/mmc/sdhci.c b/drivers/mmc/sdhci.c
index d31793a..7bbb9b2 100644
--- a/drivers/mmc/sdhci.c
+++ b/drivers/mmc/sdhci.c
@@ -478,6 +478,8 @@ static int sdhci_init(struct mmc *mmc)
 {
 	struct sdhci_host *host = mmc->priv;
 
+	board_mmc_power_init();
+
 	sdhci_reset(host, SDHCI_RESET_ALL);
 
 	if ((host->quirks & SDHCI_QUIRK_32BIT_DMA_ADDR) && !aligned_buffer) {
-- 
2.7.4

